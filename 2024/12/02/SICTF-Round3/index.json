{"summary":"<h1><span id=\"sictf-round3\">SICTF Round#3</span></h1><p>SICTF Round#3 Misc方向wp</p>\n<span id=\"more\"></span>\n\n<h2><span id=\"misc\">Misc</span></h2><h3><span id=\"签到\">签到</span></h3><p>出题⼈：树⽊ </p>\n<p>题⽬描述：扫描微信公众号回复”SICTF{Round3，我来辣~}”获取flag </p>\n<p>flag值：SICTF{1f4ce05a-0fed-42dc-9510-6e76dff8ff53}</p>\n<h3><span id=\"真-签到\">真 签到</span></h3><p>出题⼈：Kicky_Mu </p>\n<p>题⽬描述：⽉⽉最近玩了⼀款新的游戏：⽆尽的拉格朗⽇。她觉得实在是太好玩了！很想推荐给⼤家~ </p>\n<p>flag值：SICTF{T3e_endless_Lagrange_is_really_fun!}</p>\n<p>解题步骤：</p>\n<p>⾸先打开压缩包，发现带有密码，010查看⼀下，发现⽂件尾有⼀串⼗六进制</p>\n<p><img src=\"/2024/12/02/SICTF-Round3/image-20241202021223847.png\" alt=\"image-20241202021223847\"></p>\n<p>解码得到 TVTTTVTXABYUXTXTXCARYYXAZCYYYUXV</p>\n<p>看似base却不是（解不出来）发现密⽂只有字⺟，猜测是字⺟加密 </p>\n<p>在线解码：<a href=\"https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=zimu\">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=zimu</a></p>\n<p>得到： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2024HappyNewYear</span><br></pre></td></tr></table></figure>\n\n<p>这个就是压缩包密码了，解压得到⼀个图⽚和⼀个wav⽂件 ⾳频分析wav⽂件，查看频谱图发现⼀段信息</p>\n<p><img src=\"/2024/12/02/SICTF-Round3/image-20241202021412577.png\" alt=\"image-20241202021412577\"></p>\n<p>图⽚隐写密码。尝试了⼀些常⻅的隐写后发现是steghide隐写，输⼊密码解密得到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steghide extract-sf steg.jpg </span><br><span class=\"line\"></span><br><span class=\"line\">Enter passphrase: </span><br><span class=\"line\"></span><br><span class=\"line\">steghide: could not extract any data with that passphrase!</span><br></pre></td></tr></table></figure>\n\n<p>无法得到结果，仔细思索发现了wav⽂件的名字有问题。 LagrangeisCapatlized 提⽰说拉格朗⽇要⼤写字⺟？Capatlized？需要进行大写</p>\n<p>把密码改为：givemeyourLAGRANGE</p>\n<p>再次解码得到结果： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steghide extract-sf steg.jpg </span><br><span class=\"line\"></span><br><span class=\"line\">Enter passphrase: </span><br><span class=\"line\"></span><br><span class=\"line\">wrote extracted data to &quot;flag.txt&quot;</span><br></pre></td></tr></table></figure>\n\n<p>打开flag.txt即可</p>\n<p>SICTF{T3e_endless_Lagrange_is_really_fun!}</p>\n<h3><span id=\"newyearsregret\">NewYear’sregret</span></h3><p>出题⼈：Kicky_Mu </p>\n<p>题⽬描述：2024⽉⽉经历了⼀些遗憾的事，她没能帮树⽊解决物理难题，愧疚⽓愤之下就把旗帜给拆 的七零⼋落，聪明的你可以找到它们吗？ </p>\n<p>hint1：⽉⽉在设置压缩包密码的时候不⼩⼼把⼀些内容弄脏了，依稀记得格式是xxxxSICTF，丢掉 了什么呢？让我想想。。呜呜呜~记不清了呜呜呜 hint2：其中有⼀部分你知道是⼏星吗？ </p>\n<p>flag值：SICTF{Congratulation_to_you!_found_all_the_pieces_and_put_it_all_together}</p>\n<p>解题步骤：</p>\n<p>根据提⽰，压缩包掩码攻击得到密码 <code>2024SICTF</code></p>\n<p><img src=\"/2024/12/02/SICTF-Round3/image-20241202021816121.png\" alt=\"image-20241202021816121\"></p>\n<p>解压得到⼀个txt⽂件和⼀个汉信码，010分析解压前的压缩包⽂件尾发现⼀串字符 43637d135333 hex编码解⼀下⽆果，逆⼀下再hex解码得到351×64</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s=<span class=\"string\">&#x27;43637d135333&#x27;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s[::-<span class=\"number\">1</span>]) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#333531d73634</span></span><br></pre></td></tr></table></figure>\n\n<p>进行画图</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"> MAX1 = <span class=\"number\">351</span></span><br><span class=\"line\"> MAX2=<span class=\"number\">64</span></span><br><span class=\"line\">pic = Image.new(<span class=\"string\">&quot;RGB&quot;</span>,(MAX1, MAX2))</span><br><span class=\"line\"> <span class=\"built_in\">str</span> = <span class=\"string\">&quot;txt内容&quot;</span></span><br><span class=\"line\"> i = <span class=\"number\">0</span></span><br><span class=\"line\"> <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span> (<span class=\"number\">0</span>,MAX2):</span><br><span class=\"line\">   <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span> (<span class=\"number\">0</span>,MAX1):</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">str</span>[i] == <span class=\"string\">&#x27;1&#x27;</span>):</span><br><span class=\"line\">       pic.putpixel([x,y],(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">     <span class=\"keyword\">else</span>:</span><br><span class=\"line\">       pic.putpixel([x,y],(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>))</span><br><span class=\"line\">     i = i+<span class=\"number\">1</span></span><br><span class=\"line\"> pic.show()</span><br><span class=\"line\"> pic.save(<span class=\"string\">&quot;flag.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>得到图片</p>\n<p><img src=\"/2024/12/02/SICTF-Round3/image-20241202022114388.png\" alt=\"image-20241202022114388\"></p>\n<p>(<a href=\"https://www.dcode.fr/music-sheet-cipher\">Music Sheet Cipher - Online Notes Decoder, Encoder, Translator</a>) 解码得到flag⼀部分putitalltogether</p>\n<p><img src=\"/2024/12/02/SICTF-Round3/image-20241202022201863.png\" alt=\"image-20241202022201863\"></p>\n<p>扫描汉信码⽆果。010分析发现⾥⾯有压缩包和png图⽚，kali分离 压缩包解压得到base64，解码发现是base64循环</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> #脚本 </span><br><span class=\"line\">import re</span><br><span class=\"line\"> from base64 import b64decode</span><br><span class=\"line\"> </span><br><span class=\"line\">def process_data(data):</span><br><span class=\"line\">try:</span><br><span class=\"line\"># 删除包含&#x27;flag&#x27;或汉字字符的部分</span><br><span class=\"line\">     data = re.sub(r&#x27;flag|[⼀龥]&#x27;, &#x27;&#x27;, data)</span><br><span class=\"line\"># 进⾏Base64解码</span><br><span class=\"line\">     decoded_data = b64decode(data)</span><br><span class=\"line\">     return decoded_data.decode(), True</span><br><span class=\"line\">   except:</span><br><span class=\"line\"># 如果⽆法解码，返回原始数据和False表⽰⽆法继续解码</span><br><span class=\"line\">     return data, False</span><br><span class=\"line\"># 读取⽂本⽂件内容</span><br><span class=\"line\"> </span><br><span class=\"line\">with open(&#x27;flag_new.txt&#x27;, &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;) as file:</span><br><span class=\"line\">   data = file.read()</span><br><span class=\"line\">   </span><br><span class=\"line\"> iterations = 0</span><br><span class=\"line\"> </span><br><span class=\"line\"> # 循环处理数据，直到⽆法继续解码</span><br><span class=\"line\">while True:</span><br><span class=\"line\">  data, can_decode = process_data(data)</span><br><span class=\"line\">  iterations += 1</span><br><span class=\"line\"> # 如果⽆法继续解码，输出结果并结束循环</span><br><span class=\"line\">  if not can_decode:</span><br><span class=\"line\">    print(&quot;最终结果:&quot;, data)</span><br><span class=\"line\">    print(&quot;循环次数:&quot;, iterations)</span><br><span class=\"line\">    break</span><br></pre></td></tr></table></figure>\n\n<p>得到结果后base64转图⽚是⼀张⼆维码，扫码即可得到 SICTF{Congratulation_to_you! </p>\n<p>还有最后⼀张图⽚需要分析</p>\n<p><img src=\"/2024/12/02/SICTF-Round3/image-20241202022610310.png\" alt=\"image-20241202022610310\"></p>\n<p>根据题⽬提⽰：其中有⼀部分你知道是⼏星吗？猜测可能是武器星级。识图发现是游戏战双帕弥什⾥⾯的装备，找⼀下图鉴</p>\n<p><a href=\"https://wiki.biligame.com/zspms/%E6%AD%A6%E5%99%A8\">武器 - 战双帕弥什WIKI_BWIKI_哔哩哔哩</a></p>\n<p>按提⽰查找他们的星级，最终得到结果如下： 44664654464566654465645644544664654654644546445446646565444454544664654664544545 646454544454466465465645644 </p>\n<p>发现只有三种数字考虑到摩斯密码。4换成“.” 6换成“-” 5换成空格 </p>\n<p>_found_all_the_pieces_and _</p>\n<p>最后把三部分拼接即可 </p>\n<p>SICTF{Congratulation_to_you!_found_all_the_pieces_and_put_it_all_together}</p>\n<h3><span id=\"geekchallege\">GeekChallege</span></h3><p>出题⼈：树⽊</p>\n<p>题⽬描述：我的密码可是很⻓的呢！</p>\n<p>题⽬源码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"> <span class=\"keyword\">import</span> random</span><br><span class=\"line\"> <span class=\"keyword\">def</span> <span class=\"title function_\">generate_random_array</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    characters = [<span class=\"built_in\">chr</span>(i) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">33</span>, <span class=\"number\">127</span>)]</span><br><span class=\"line\">    result = random.sample(characters, n)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"> <span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    sictf = <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">  ____    ___    ____   _____   _____ </span></span><br><span class=\"line\"><span class=\"string\"> / ___|  |_ _|  / ___| |_   _| |  ___|</span></span><br><span class=\"line\"><span class=\"string\"> \\___ \\   | |  | |       | |   | |_   </span></span><br><span class=\"line\"><span class=\"string\">  ___) |  | |  | |___    | |   |  _|  </span></span><br><span class=\"line\"><span class=\"string\"> |____/  |___|  \\____|   |_|   |_|    </span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    array = generate_random_array(<span class=\"number\">5</span>)</span><br><span class=\"line\">    amount = <span class=\"number\">0</span></span><br><span class=\"line\">    passwd = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">114</span>):</span><br><span class=\"line\">        passwd+=array[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)] </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(sictf)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Rule:If the i-th character of the string you input is the same as </span></span><br><span class=\"line\"><span class=\"string\">the i-th character of my password, I will output a 1. Otherwise, I will output </span></span><br><span class=\"line\"><span class=\"string\">a 0. Keep guessing my password until you get it right, and I will give you </span></span><br><span class=\"line\"><span class=\"string\">flag\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Tip:len(array)=5&amp;&amp;len(passwd)=114\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        user_input = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;&gt;&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(user_input)!=<span class=\"number\">114</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;0&#x27;</span>*<span class=\"number\">114</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(user_input)):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> user_input[i]==passwd[i]:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;1&#x27;</span>,end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                    amount+=<span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;0&#x27;</span>,end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\n&#x27;</span>,end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> amount==<span class=\"number\">114</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;You win!!!&quot;</span>)</span><br><span class=\"line\">                os.system(<span class=\"string\">&#x27;echo $GZCTF_FLAG&#x27;</span>) </span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        amount=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">pwd=[<span class=\"number\">0</span>]*<span class=\"number\">114</span></span><br><span class=\"line\">p=remote(<span class=\"string\">&quot;yuanshen.life&quot;</span>,PORT)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">30</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">p.sendline((<span class=\"built_in\">chr</span>(i)*<span class=\"number\">114</span>).encode())</span><br><span class=\"line\">time.sleep(<span class=\"number\">0.15</span>)</span><br><span class=\"line\">tmp=p.recv()</span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">114</span>):</span><br><span class=\"line\"><span class=\"keyword\">if</span> tmp[j]==<span class=\"number\">49</span>:</span><br><span class=\"line\">pwd[j]=<span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\">p.sendline(<span class=\"string\">&#x27;&#x27;</span>.join(pwd).encode())</span><br><span class=\"line\">p.recvline()</span><br><span class=\"line\">p.recvline()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(p.recvline().decode())</span><br></pre></td></tr></table></figure>\n\n\n\n<h3><span id=\"神秘的流量\">神秘的流量</span></h3><p>出题⼈：树⽊&amp;nnnpc</p>\n<p>题⽬描述：<br>flag值：SICTF{b50936c7-b60d-411e-a91f-304937164b9c}</p>\n<blockquote>\n<p><a href=\"https://github.com/DidierStevens/Beta/blob/master/cs-extract-key.py\">https://github.com/DidierStevens/Beta/blob/master/cs-extract-key.py</a></p>\n<p><a href=\"https://github.com/DidierStevens/Beta/blob/master/cs-parse-http-traffic.py\">https://github.com/DidierStevens/Beta/blob/master/cs-parse-http-traffic.py</a></p>\n</blockquote>\n<p>使⽤ cs-extract-key.py ⼯具 可以得到 AES key : HMAC key</p>\n<p>然后⽤ cs-parse-http-traffic.py 就可以拿到明⽂</p>\n<p>参考资料：</p>\n<blockquote>\n<p><a href=\"https://fdlucifer.github.io/2022/01/05/decrypt-cs-traffic/\">https://fdlucifer.github.io/2022/01/05/decrypt-cs-traffic/</a></p>\n</blockquote>\n<h3><span id=\"whowhowho\">WHO?WHO?WHO?</span></h3><p>出题⼈：七七</p>\n<p>题⽬描述：我不说是谁了！！！太渣了！！！呜呜呜！！！让我遍体鳞伤！！！</p>\n<p>解题思路：</p>\n<p>1、archpr爆破密码为qweqwe</p>\n<p>2、使⽤零宽后得到⼀串rabbit解密，且密码就是问题的答案，密码为shumu</p>\n<p>3、根据⽂件题⽬提⽰使⽤DNA解密得到flag</p>\n<p><em>flag</em>值：<em>S<strong>I</strong>C<strong>TF{Q1A0_Q1A0_<strong>G</strong>A</strong>0**_<strong>S</strong>U**_<strong>N1</strong><em><strong>S</strong>H<strong>U</strong>M<strong>U</strong></em><strong>S</strong>H<strong>1</strong><em><strong>Z</strong>H<strong>A</strong></em><strong>N</strong>A<strong>N</strong>}</em></p>\n<h3><span id=\"日志分析1\">⽇志分析1</span></h3><p>出题⼈：七七</p>\n<p>题⽬描述：可恶的树魔王⿊客居然控制了我的电脑，聪明的你⼀定能够识破树魔王的阴谋吧！</p>\n<p>flag格式为SICTF{⿊客所接⼊的IP地址|⿊客所创建的⽤⼾名|⿊客所加⼊的⽤⼾组|⿊客创建的计划名|创建计划任务的对象后⻔所处的路径（⼩写盘符......\\）|⿊客远程登陆<em>RDP</em>的账⼾}</p>\n<p><em>flag</em>值： </p>\n<p><em>SICTF{192.168.222.200|attack$|Administrators|callback|c:\\windows\\system32\\windows_at</em> <em>tack.exe|ADOFLMB\\attack$}</em></p>\n<h3><span id=\"日志分析2\">⽇志分析2</span></h3><p>出题⼈：七七</p>\n<p>题⽬描述：没想到刚刚修复回来的阿帕奇⼜被⼊侵了，师傅们速度来揪出树魔王的蛛丝⻢迹吧！</p>\n<p>flag格式为SICTF{攻击者的IP地址|攻击者得到<em>W<strong>e</strong>b</em>应⽤后台管理权限的⽅法*|<em>攻击者在</em>S<strong>Q</strong>L<em>注⼊攻击过程中使⽤的⾃动化⼯具名称</em>|<em>⼯具版本号</em>|<em>攻击者使⽤的</em>W<strong>e</strong>b<strong>s</strong>h<strong>e</strong>ll<em>连接⼯具（中⽂名）</em>|<em>⼯具版本号</em>}*</p>\n<p><em>flag</em>值：<em>S<strong>I</strong>C<strong>T</strong>F*</em>{<strong>10</strong>.<strong>11</strong>.<strong>35</strong>.<strong>95</strong>|<em>暴⼒破解</em>|sqlmap|1.2.4.18|<em>蚁剑</em>|2.1}*</p>\n"}